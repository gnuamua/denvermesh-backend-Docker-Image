***************************************************************************
----------------This is the ARUFON-BACKEND REPO------------------------
--------------Created by Andrew Himelstieb  May 14 2024--------------------
***************************************************************************

This is the dockerfile for the backend image of the
denvermesh.org website. These files are required to build the image
so the image can be included in the docker-compose file for the
site.

The Dockerfile uses a fedora 41 base image, and installs the plone backend and addons using
pip instead of buildout. This file also copies requirements.txt and the skeleton dir
into the image, as these files are used to configure the image.

The github repo 'arufon-plone-backend', NOT 'this repo', contains all the development files for the Plone
API backend for the DenverMesh website.

Any locally developed addons, e.g. for content types or site policy (workflow) etc will need to be copied into this directory and the Dockerfile 
updated as necessary.

This is done by copying the 'src' directory in the backend, to the skeleton directory here. Then in the versions.cfg file you need to insert at the top a line: "-e src/new-addon".
to the path of your addon directory.

Once this docker image is built and pushed to dockerhub (or equivalent), and then pulled by the server, the Data.fs file (the plone ZODB database) will need to be copied into the persistant volume for the docker-compose container on the server, located in /var/lib/docker/volumes/docker-compose_data/_data/ or there abouts. 
	`rsync -avz <source>/  <dest> ` for the blobstorage as well, to the blobstorage location on the server (note the "/" on the source, and not on the dest). 
**-This essentially copies the entire site (minus the volto frontend) from the developement environment on local computer to server,  or can be done vice-versa.

*Updated Sat Mar 8 2025 -
	Plone version to 6.0.9, pip upgrade setuptools, etc
	Used for the docker image pulled by docker-compose.yml 
	Tag: gnuamua/arufon-backend:prod


